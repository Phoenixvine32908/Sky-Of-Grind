GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('radiation_chamber')
        .category('drack')
        .setEUIO('in')
        .setMaxIOSize(1, 2, 1, 2)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.BATH)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('xl_radiation_chamber', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('radiation_chamber')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT, GTRecipeModifiers.BATCH_MODE])
        .appearanceBlock(() => Block.getBlock('gtceu:atomic_casing'))
        .pattern(definition => FactoryBlockPattern.start()
		.aisle("BBBAAABBB", "BCBAAABCB", "BCBAAABCB", "BCBAAABCB", "BCBAAABCB", "BCBAAABCB", "BBBAAABBB")
	.aisle("BBBBBBBBB", "CDBAAABDC", "CDBAAABDC", "CDBAAABDC", "CDBAAABDC", "CDBAAABDC", "BBBBBBBBB")
	.aisle("BBBBBBBBB", "BBAAAAABB", "BBAAAAABB", "BBAAAAABB", "BBAAAAABB", "BBAAAAABB", "BBBBBBBBB")
	.aisle("ABBBBBBBA", "AAABBBAAA", "AAAECEAAA", "AAAECEAAA", "AAAECEAAA", "AAABBBAAA", "ABBBBBBBA")
	.aisle("ABBBBBBBA", "AAABBBAAA", "AAACGCAAA", "AAACGCAAA", "AAACGCAAA", "AAABBBAAA", "ABBBBBBBA")
	.aisle("ABBBBBBBA", "AAABKBAAA", "AAAECEAAA", "AAAECEAAA", "AAAECEAAA", "AAABBBAAA", "ABBBBBBBA")
	.aisle("BBBBBBBBB", "BBAAAAABB", "BBAAAAABB", "BBAAAAABB", "BBAAAAABB", "BBAAAAABB", "BBBBBBBBB")
	.aisle("BBBBBBBBB", "CDBAAABDC", "CDBAAABDC", "CDBAAABDC", "CDBAAABDC", "CDBAAABDC", "BBBBBBBBB")
	.aisle("BBBAAABBB", "BCBAAABCB", "BCBAAABCB", "BCBAAABCB", "BCBAAABCB", "BCBAAABCB", "BBBAAABBB")
   .where("A", Predicates.any())
   .where("B", Predicates.blocks("gtceu:atomic_casing")
   		.or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
		.or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
		.or(Predicates.abilities(PartAbility.EXPORT_ITEMS, PartAbility.EXPORT_FLUIDS, PartAbility.INPUT_ENERGY, PartAbility.IMPORT_FLUIDS, PartAbility.IMPORT_ITEMS)))
   .where("C", Predicates.blocks("kubejs:fusion_glass_mk2"))
   .where("D", Predicates.blocks("gtceu:plutonium_241_block"))
   .where("E", Predicates.blocks("gtceu:atomic_alloy_frame"))
   .where("K", Predicates.controller(Predicates.blocks(definition.get())))
   .where("G", Predicates.blocks("antiblocksrechiseled:bright_magenta_border"))	
            .build())
        .workableCasingModel("gtceu:block/casings/gcym/atomic_casing", 'gtceu:block/multiblock/generator/large_plasma_turbine')})