GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
    event.create('evaporation_pool')
        .category('drack')
        .setEUIO('in')
        .setMaxIOSize(1, 2, 1, 2)
        .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
        .setSound(GTSoundEntries.BATH)
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('large_evaporation_pool', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('evaporation_pool')
        .recipeModifiers([GTRecipeModifiers.PARALLEL_HATCH, GTRecipeModifiers.OC_NON_PERFECT, GTRecipeModifiers.BATCH_MODE])
        .appearanceBlock(() => Block.getBlock('gtceu:corrosion_proof_casing'))
        .pattern(definition => FactoryBlockPattern.start()
            .aisle('AAAAAAAAAAA','AAAAAAAAAAA','AAAAAAAAAAA')
            .aisle('AAAAAAAAAAA','AC#######CA','A#########A')
			.aisle('AAAAAAAAAAA','AC#######CA','A#########A')
			.aisle('AAAAAAAAAAA','AC#######CA','A#########A')
			.aisle('AAAAAAAAAAA','AC#######CA','A#########A')
			.aisle('AAAAAAAAAAA','AC#######CA','A#########A')
			.aisle('AAAAAAAAAAA','AC#######CA','A#########A')
			.aisle('AAAAAAAAAAA','AC#######CA','A#########A')
            .aisle('AAAAAAAAAAA','AAAAAKAAAAA','AAAAAAAAAAA')
            .where('K', Predicates.controller(Predicates.blocks(definition.get())))
            .where('C', Predicates.blocks('gtceu:ptfe_pipe_casing'))
            .where('A',Predicates.blocks('gtceu:corrosion_proof_casing')
					.or(Predicates.abilities(PartAbility.MAINTENANCE).setExactLimit(1))
					.or(Predicates.abilities(PartAbility.PARALLEL_HATCH).setMaxGlobalLimited(1))
					.or(Predicates.abilities(PartAbility.EXPORT_ITEMS, PartAbility.EXPORT_FLUIDS, PartAbility.INPUT_ENERGY, PartAbility.IMPORT_FLUIDS, PartAbility.IMPORT_ITEMS)))
            .where('#', Predicates.any())
            .build()
        )
        .workableCasingModel("gtceu:block/casings/gcym/corrosion_proof_casing", 'gtceu:block/machines/replicator')
})