GTCEuStartupEvents.registry('gtceu:recipe_type', event => {
  event.create('laser_beam_containment_chamber')
    .category('drac')
    .setEUIO('in')
    .setMaxIOSize(1, 2, 2, 0) 
    .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
    .setSound(GTSoundEntries.REPLICATOR);

  event.create('laser_synchronizer_chiller')
    .category('drac')
    .setEUIO('in')
    .setMaxIOSize(1, 1, 2, 1) 
    .setProgressBar(GuiTextures.PROGRESS_BAR_ARROW, FillDirection.LEFT_TO_RIGHT)
    .setSound(GTSoundEntries.REPLICATOR);
})

GTCEuStartupEvents.registry('gtceu:machine', event => {
    event.create('industrial_grade_laser_synchronizer_chiller', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('laser_synchronizer_chiller')
        .recipeModifiers([GTRecipeModifiers.OC_NON_PERFECT, GTRecipeModifiers.BATCH_MODE])
        .appearanceBlock(() => Block.getBlock('gtceu:laser_safe_engraving_casing'))
        .pattern(definition => FactoryBlockPattern.start()
			.aisle("BBBBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "CBDBCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "CBDBCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "CBDBCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "CBDBCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "CBDBCAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "BBBBBAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABFBBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "AIFIBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "AIFIBDDDDDJAJAAAAABAAAAAJAJAAAAAGAEHEAG", "AIFIBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "ABFBBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "BBBBBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAEHEAG", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEEE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "AILIBDDDDDBBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "ADMMMMMMMMBBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "AILIBDDDDDBBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "BBBBBAAAAABABAAAAABAAAAABABAAAAAAEKFKEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKFKEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEEE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAGA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAGA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAEKKNOKE", "AIIIBAAAAABBNNNNNNNNNNNNBBBAAAAAEKKNKKE", "AIIIBDDDDDBBDDDDDDDDDDDDBBBDDDDDEKKNKKE", "AIIIBAAAAABBNNNNNNNNNNNNBBBAAAAAEKKNKKE", "ABIBBAAAAABBBHBHBHBHBHBHBBBAAAAAEKKNKKE", "BBBBBAAAAABABAAAAABAAAAABABAAAAAEKKNKKE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKKNKKE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEKPKKE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEPEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEPEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPPAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAEONQNFH", "AILIBDDDDDBBDDDDDDDDDDDDBBBDDDDDEONQNFH", "ADRRRRRRRRBBOOOOOOOOOOOOOOOOOOOOOONQNFH", "AILIBDDDDDBBDDDDDDDDDDDDBBBDDDDDEONQNFH", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAEONQNFH", "BBBBBAAAAABABAAAAABAAAAABABAAAAAEONQNFH", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEONQNFH", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEPQPFE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPQPEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQPAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQPAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEPQPEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPQPAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPPAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAEKONOKE", "AIIIBAAAAABBNNNNNNNNNNNNBBBAAAAAEKKNKKE", "AIIIBDDDDDBBDDDDDDDDDDDDBBBDDDDDEKKNKKE", "AIIIBAAAAABBNNNNNNNNNNNNBBBAAAAAEKKNKKE", "ABIBBAAAAABBBHBHBHBHBHBHBBBAAAAAEKKNKKE", "BBBBBAAAAABABAAAAABAAAAABABAAAAAEKKNKKE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKKNKKE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEKPKEE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEPEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEPEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAPPPAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "AILIBDDDDDBBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "ADSSSSSSSSBBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "AILIBDDDDDBBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "ABBBBAAAAABBBHBHBHBHBHBHBBBAAAAAAEKFKEA", "BBBBBAAAAABABAAAAABAAAAABABAAAAAAEKFKEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEKFKEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEEE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAGA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAAAGA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
			.aisle("BBBBBAAAAABABAAAAABAAAAABABAAAAAEEEEEEE", "ABFBBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "AIFIBAAAAABABAAAABBBAAAABABAAAAAGAEHEAG", "AIFIBDDDDDBABAAABBTBBAAABABAAAAAGAEHEAG", "AIFIBAAAAABABAAAABBBAAAABABAAAAAGAEHEAG", "ABFBBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "BBBBBAAAAABABAAAAABAAAAABABAAAAAGAEHEAG", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAGAEHEAG", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAEEEEEEE", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA", "AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA")
			.aisle
   .where("A", Predicates.any())
   .where("B", Predicates.blocks("gtceu:laser_safe_engraving_casing")
		.or(Predicates.abilities(PartAbility.EXPORT_ITEMS, PartAbility.EXPORT_FLUIDS, PartAbility.IMPORT_FLUIDS, PartAbility.IMPORT_ITEMS))
        .or(Predicates.abilities(PartAbility.MAINTENANCE)))
   .where("C", Predicates.blocks("gtceu:stellar_matter_plasma_frame"))
   .where("D", Predicates.blocks("kubejs:fusion_glass_mk2"))
   .where("E", Predicates.blocks("kubejs:supercritical_neutronium_casing"))
   .where("F", Predicates.blocks("minecraft:air"))
   .where("G", Predicates.blocks("gtceu:universium_frame"))
   .where("H", Predicates.blocks("kubejs:conductive_glass"))
   .where("I", Predicates.blocks("kubejs:stellar_powered_casing"))
   .where("J", Predicates.abilities(PartAbility.INPUT_LASER).setExactLimit(4))
   .where("K", Predicates.blocks("gtceu:heat_vent"))
   .where("L", Predicates.blocks("gtceu:uhv_ultimate_battery"))
   .where("M", Predicates.blocks("antiblocksrechiseled:bright_red"))
   .where("N", Predicates.blocks("kubejs:highly_superconducting_coil_block"))
   .where("O", Predicates.blocks("antiblocksrechiseled:bright_white"))
   .where("P", Predicates.blocks("kubejs:large_precision_casing"))
   .where("Q", Predicates.blocks("kubejs:osmiridium_pipe_casing"))
   .where("R", Predicates.blocks("antiblocksrechiseled:bright_green"))
   .where("S", Predicates.blocks("antiblocksrechiseled:bright_blue"))
   .where("T", Predicates.controller(Predicates.blocks(definition.get())))
            .build()
        )
        .workableCasingModel("gtceu:block/casings/gcym/laser_safe_engraving_casing", 'gtceu:block/machines/forming_press')
	
	event.create('collosal_laser_beam_containment_chamber', 'multiblock')
        .rotationState(RotationState.NON_Y_AXIS)
        .recipeType('laser_beam_containment_chamber')
        .recipeModifiers([GTRecipeModifiers.OC_NON_PERFECT, GTRecipeModifiers.BATCH_MODE])
        .appearanceBlock(() => Block.getBlock('gtceu:laser_safe_engraving_casing'))
        .pattern(definition => FactoryBlockPattern.start()
		.aisle("ABBBAAAACCCCCCCCC", "ABDBAAAACCCCCCCCC", "ABDBAAAAEAAAAAAAE", "ABBBAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAACCCCCCCCC", "AAAAAAAACCCCCCCCC")
		.aisle("BBBBBAAACCCCCCCCC", "BFGFBAAACHHHHHHHC", "BFFFBAAAACCCCCCCA", "BBFBBAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACCCCCCCA", "AAFFFFFFCCCCCCCCC", "AAAAAAAACCCCCCCCC")
		.aisle("BBBBBAAACCCCCCCCC", "JFGFJAAACHHHHHHHC", "JFGFJAAAACKCKCKCA", "BFGFBAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFFFFFFCICICICA", "AFGGGGGGCCICICICC", "AAFFFFFFCCICICICC")
		.aisle("BBBBBAAACCCCCCCCC", "JFGFJAAACHHHHHHHC", "JFFFJAAAACKCKCKCA", "BBFBBAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAACICICICA", "AAFFFFFFCCICICICC", "AAAAAAAACCICICICC")
		.aisle("BBBBBAAACCCCCCCCC", "JFGFJAAACHHHHHHHC", "JFFFJAAAACKCKCKCA", "BBBBBAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAACICICICA", "AAAAAAAACCICICICC", "AAAAAAAACCICICICC")
		.aisle("BBBBBAAACCCCCCCCC", "JFGFJAAACHHHHHHHC", "JFFFJAAAACKCKCKCA", "BBBBBAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAAILIMINIA", "AAAAAAAAACICICICA", "AAAAAAAACCICICICC", "AAAAAAAACCICICICC")
		.aisle("BBBBBAAACCCCCCCCC", "JFGFJAAACHHHHHHHC", "JFFFJAAAACKCKCKCA", "BBFBBAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAAILIMINIA", "AAFAAAAAACICICICA", "AAFFFFFFCCICICICC", "AAAAAAAACCICICICC")
		.aisle("BBBBBAAACCCCCCCCC", "JFGFJAAACHHHHHHHC", "JFGFJAAAACKCKCKCA", "BFGFBAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFAAAAAILIMINIA", "AFGFFFFFFCICICICA", "AFGGGGGGCCICICICC", "AAFFFFFFCCICICICC")
		.aisle("BBBBBAAACCCCCCCCC", "BFFFBAAACHHHHHHHC", "BFFFBAAAACCCCCCCA", "BBFBBAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACIJIJICA", "AAFAAAAAACCCCCCCA", "AAFFFFFFCCCCCCCCC", "AAAAAAAACCCCCCCCC")
		.aisle("ABBBAAAACCCCCCCCC", "ABJBAAAACCCCZCCCC", "ABJBAAAAEAAAAAAAE", "ABBBAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAAEAAAAAAAE", "AAAAAAAACCCCCCCCC", "AAAAAAAACCCCCCCCC")
		   .where("A", Predicates.any())
   .where("B", Predicates.blocks("gtceu:high_power_casing"))
   .where("C", Predicates.blocks("gtceu:laser_safe_engraving_casing")
		.or(Predicates.abilities(PartAbility.EXPORT_ITEMS, PartAbility.EXPORT_FLUIDS, PartAbility.IMPORT_FLUIDS, PartAbility.IMPORT_ITEMS))
        .or(Predicates.abilities(PartAbility.MAINTENANCE)))
   .where("D", Predicates.abilities(PartAbility.INPUT_LASER).setExactLimit(2))
   .where("E", Predicates.blocks("gtceu:stellar_matter_plasma_frame"))
   .where("F", Predicates.blocks("kubejs:fusion_casing_mk4"))
   .where("G", Predicates.blocks("kubejs:fusion_coil_mk2"))
   .where("H", Predicates.blocks("minecraft:netherite_block"))
   .where("I", Predicates.blocks("kubejs:fusion_glass_mk2"))
   .where("J", Predicates.blocks("kubejs:stellar_powered_casing"))
   .where("K", Predicates.blocks("minecraft:beacon"))
   .where("Z", Predicates.controller(Predicates.blocks(definition.get())))
   .where("L", Predicates.blocks("connectedglass:borderless_glass_red"))
   .where("M", Predicates.blocks("connectedglass:borderless_glass_lime"))
   .where("N", Predicates.blocks("connectedglass:borderless_glass_blue"))
   
           .build()
        )
        .workableCasingModel("gtceu:block/casings/gcym/laser_safe_engraving_casing", 'gtceu:block/multiblock/fusion_reactor')
})